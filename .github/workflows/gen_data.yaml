name: 🐹 Gen Data 🧬
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: "30 1 * * *" #7:15 AM NPT
    - cron: "30 13 * * *" #7:15 PM NPT
#------------------------------------------------------------------------------------#
jobs:
    gen-data:
      name: Gen Data
      runs-on: ubuntu-latest
      timeout-minutes: 120
      permissions: 
        contents: write

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 1
          filter: "blob:none"

      - name: Setup Env
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Install coreutils
          sudo apt-get update -y -qq && sudo apt-get install curl coreutils dos2unix file findutils gawk git jq moreutils rsync tar xz-utils util-linux wget zip -y -qq
          ##Install Addons
          #https://github.com/pkgforge/devscripts/blob/main/Linux/install_bins_curl.sh
          bash <(curl -qfsSL "https://raw.githubusercontent.com/pkgforge/devscripts/refs/heads/main/Linux/install_bins_curl.sh")
          ##Create Output Dir
          mkdir -p "${GITHUB_WORKSPACE}/main/data"
          echo "O_D=${GITHUB_WORKSPACE}/main/data" >> "${GITHUB_ENV}"
          echo "GIT_TERMINAL_PROMPT=0" >> "${GITHUB_ENV}"
          echo "GIT_ASKPASS=/bin/echo" >> "${GITHUB_ENV}"
          git config --global "user.email" "AjamX101@gmail.com"
          git config --global "user.name" "Azathothas"
          ##tmp
          SYSTMP="$(dirname $(mktemp -u))" && export SYSTMP="${SYSTMP}"
          echo "SYSTMP=${SYSTMP}" >> "${GITHUB_ENV}"
        continue-on-error: true

      - name: Debloat Runner
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          bash <(curl -qfsSL "https://raw.githubusercontent.com/pkgforge/devscripts/main/Github/Runners/debloat_ubuntu.sh")
        continue-on-error: true

      - name: Generate Metadata (PKG_RAW.json) + (PKG_DUMP.json)
        env:
          GH_TOKEN: "${{ github.token }}"
          GITHUB_TOKEN: "${{ github.token }}"
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Main
          #export PARALLEL_LIMIT="$(($(nproc)+1))"
          export PARALLEL_LIMIT="25"
          export O_D="${GITHUB_WORKSPACE}/main/data"
          dos2unix --quiet "${GITHUB_WORKSPACE}/main/scripts/_get_index_data.sh"
          chmod +x "${GITHUB_WORKSPACE}/main/scripts/_get_index_data.sh"
          bash "${GITHUB_WORKSPACE}/main/scripts/_get_index_data.sh"
          ##Copy (PKG_RAW.json)
          if [[ -s "${SYSTMP}/PKG_RAW.json" && $(stat -c%s "${SYSTMP}PKG_RAW.json") -gt 1024 ]]; then
            PKG_COUNT="$(jq -r '.[] | .pkg_id' "${SYSTMP}/PKG_RAW.json" | grep -iv 'null' | sort -u | wc -l | tr -d '[:space:]')"
            if [[ "${PKG_COUNT}" -ge 100 ]]; then
               cp -fv "${SYSTMP}/PKG_RAW.json" "${O_D}/PKG_RAW.json"
            fi
          fi
          ##Copy (PKG_DUMP.json)
          if [[ -s "${SYSTMP}/PKG_DUMP.json" && $(stat -c%s "${SYSTMP}/PKG_DUMP.json") -gt 1024 ]]; then
               if [[ -f "${O_D}/PKG_DUMP.json" ]]; then
                 jq -s \
                 '
                  (.[1] // []) as $old |
                  (.[0] // []) as $new |
                  ($old | map({(.pkg_id): .}) | add) as $old_by_id |
                  ($new | map({(.pkg_id): .}) | add) as $new_by_id |
                  ($old_by_id + $new_by_id) | to_entries | map(.value) | sort_by(.pkg_id)
                 ' "${SYSTMP}/PKG_DUMP.json" "${O_D}/PKG_DUMP.json" | jq . > "${SYSTMP}/merged.json"
                 export I_F="${SYSTMP}/merged.json"
               else
                 export I_F="${SYSTMP}/PKG_DUMP.json"
               fi
               PKG_COUNT="$(jq -r '.[] | .pkg_id' "${I_F}" | grep -iv 'null' | sort -u | wc -l | tr -d '[:space:]')"
               if [[ "${PKG_COUNT}" -le 100 ]]; then
                  echo -e "\n[-] FATAL: Failed to Generate PKG DUMP\n"
                  echo "[-] Count: ${PKG_COUNT}"
                 exit 1
               else
                  echo -e "\n[+] Total Packages: ${PKG_COUNT}"
                  cp -fv "${I_F}" "${O_D}/PKG_DUMP.json"
               fi
          fi
        continue-on-error: true

      - name: Generate Metadata (REPO_DUMP.json) + (PKGS_CLI_ONLY.json)
        env:
          GH_TOKEN: "${{ github.token }}"
          GITHUB_TOKEN: "${{ github.token }}"
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Main
          #export PARALLEL_LIMIT="$(($(nproc)+1))"
          export PARALLEL_LIMIT="25"
          export O_D="${GITHUB_WORKSPACE}/main/data"
          dos2unix --quiet "${GITHUB_WORKSPACE}/main/scripts/_get_initial_list.sh"
          chmod +x "${GITHUB_WORKSPACE}/main/scripts/_get_initial_list.sh"
          bash "${GITHUB_WORKSPACE}/main/scripts/_get_initial_list.sh"
          ##Copy (REPO_DUMP.json)
          if [[ -s "${SYSTMP}/REPO_DUMP.json" && $(stat -c%s "${SYSTMP}/REPO_DUMP.json") -gt 1024 ]]; then
            PKG_COUNT="$(jq -r '.[] | .name' "${SYSTMP}/REPO_DUMP.json" | grep -iv 'null' | sort -u | wc -l | tr -d '[:space:]')"
            if [[ "${PKG_COUNT}" -ge 100 ]]; then
               cp -fv "${SYSTMP}/REPO_DUMP.json" "${GITHUB_WORKSPACE}/main/data/REPO_DUMP.json"
            fi
          fi
          ##Copy (PKGS_CLI_ONLY.json)
          if [[ -s "${SYSTMP}/PKGS_CLI_ONLY.json" && $(stat -c%s "${SYSTMP}/PKGS_CLI_ONLY.json") -gt 1024 ]]; then
            PKG_COUNT="$(jq -r '.[] | .name' "${SYSTMP}/PKGS_CLI_ONLY.json" | grep -iv 'null' | sort -u | wc -l | tr -d '[:space:]')"
            if [[ "${PKG_COUNT}" -ge 100 ]]; then
               cp -fv "${SYSTMP}/PKGS_CLI_ONLY.json" "${GITHUB_WORKSPACE}/main/data/PKGS_CLI_ONLY.json"
            fi
          fi
        continue-on-error: true

      - name: Update (PKGS_CLI_ONLY.json)
        env:
          GH_TOKEN: "${{ github.token }}"
          GITHUB_TOKEN: "${{ github.token }}"
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Main
          export O_D="${GITHUB_WORKSPACE}/main/data"
          if [[ -s "${O_D}/PKG_DUMP.json" && -s "${O_D}/PKGS_CLI_ONLY.json" ]]; then
            jq -s \
              '
               (.[1] // []) as $old |
               (.[0] // []) as $new |
               ($old | map({(.pkg_id): .}) | add) as $old_by_pkg_id |
               ($new | map({(.pkg_id): .}) | add) as $new_by_pkg_id |
               ($old_by_pkg_id + $new_by_pkg_id) | to_entries | map(.value) | unique_by(.pkg_id) | sort_by(.pkg_id)
              ' "${O_D}/PKGS_CLI_ONLY.json" "${O_D}/PKG_DUMP.json" |\
            jq \
              '
               sort_by([
                 -(if .stars then (.stars | tonumber) else -1 end),
                 .name
               ]) |
               to_entries |
               map(.value + { rank: (.key + 1 | tostring) })
              ' |\
             jq 'unique_by(.pkg_id) | sort_by(.rank | tonumber) | [range(length)] as $indices | [., $indices] | transpose | map(.[0] + {rank: (.[1] + 1 | tostring)})' | jq . > "${SYSTMP}/merged.json"
            export I_F="${SYSTMP}/merged.json"
            PKG_COUNT="$(jq -r '.[] | .pkg_id' "${I_F}" | grep -iv 'null' | sort -u | wc -l | tr -d '[:space:]')"
            if [[ "${PKG_COUNT}" -le 100 ]]; then
               echo -e "\n[-] FATAL: Failed to Merge CLI PKGs\n"
               echo "[-] Count: ${PKG_COUNT}"
              exit 1
            else
               echo -e "\n[+] Total CLI Packages: ${PKG_COUNT}"
               cp -fv "${I_F}" ${O_D}/PKGS_CLI_ONLY.json
            fi
          fi
        continue-on-error: true

      - name: Get DateTime
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          NEPALI_TIME="$(TZ='Asia/Kathmandu' date +'%Y-%m-%d (%I:%M:%S %p)')"
          echo "NEPALI_TIME=${NEPALI_TIME}" >> "${GITHUB_ENV}"
        continue-on-error: true
        
      - name: Pull & Push (1)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          git pull origin main --no-edit 2>/dev/null
          git pull origin main --ff-only ; git merge --no-ff -m "Merge & Sync"
        continue-on-error: true
      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          repository: ./main
          commit_user_name: Azathothas
          commit_user_email: AjamX101@gmail.com
          commit_message: "🐹 Generated Data 🧬 <-- [${{ env.NEPALI_TIME }}] ⌚"
          
      - name: Pull & Push (2)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          git pull origin main --no-edit 2>/dev/null
          git pull origin main --ff-only ; git merge --no-ff -m "Merge & Sync"
        continue-on-error: true
      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          repository: ./main
          commit_user_name: Azathothas
          commit_user_email: AjamX101@gmail.com
          commit_message: "🐹 Generated Data 🧬 <-- [${{ env.NEPALI_TIME }}] ⌚"